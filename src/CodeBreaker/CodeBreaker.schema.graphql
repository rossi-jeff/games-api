type CodeBreaker {
  Id: Int!
  Status: GameStatus
  Columns: Int
  CreatedAt: Date
  UpdatedAt: Date

  User: User
  Guesses: [CodeBreakerGuess]
}

type CodeBreakerGuess {
  Id: Int!
  Guess: [CodeBreakerGuessColor]
  Keys: [CodeBreakerGuessKey]
}

type CodeBreakerGuessColor {
  Color: Color
}

type CodeBreakerGuessKey {
  Key: Key
}

type CodeBreakerCode {
  Color: Color
}

enum Color {
  Red
  Orange
  Yellow
  Green
  Blue
  Purple
  Brown
  Black
  White
}

enum Key {
  Black
  White
}

type Query {
  codeBreakers: [CodeBreaker]
  codeBreaker(Id: Int!): CodeBreaker
  codeBreakerSolution(Id: Int!): [CodeBreakerCode]
}

type Mutation {
  codeBreakerCreate(Colors: [Color!]!, Columns: Int!): CodeBreaker
  codeBreakerGuess(Id: Int!, Colors: [Color!]!): CodeBreakerGuess
}
