type HangMan {
  Id: Int!
  Correct: [String]
  Wrong: [String]
  Status: GameStatus
  CreatedAt: Date
  UpdatedAt: Date

  User: User
  Word: Word
}

enum GameStatus {
  Playing
  Won
  Lost
}

type GuessResult {
  hangMan: HangMan
  Guess: String
  Found: Boolean
  Status: GameStatus
}

type Query {
  hangMen: [HangMan]
  hangMan(Id: Int!): HangMan
}

type Mutation {
  hangManCreate(WordId: Int!): HangMan
  hangManGuess(Id: Int!, Guess: String!): GuessResult
}
